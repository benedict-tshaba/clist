28/08/2017    -    Changed from using a hash table to just implementing a
simple array. Should be more efficient now. Removed hash function, and its
dependencies, now indexing using table 'size'.

	      -    Implemented Pop function.
	      -	   Implemented remove_item function.

02/09/2017    -    Implemented sort_asc function. But later realised that a
redesign was necessary.

04/09/2017    -    Redesigned the library, now each item in the list has
associated with it a 'representation' in the form of a long int, this should
make it easier to sort elements without being confined only to quadratic time
algorithms. Since the elements will be represented as a long int, sorting and
other data manipulations should be trivial.

05/09/2017    -    Implemented quick sort, which is better than the previous
insertion sort. But somehow the system broke particularly with the function in
charge of manipulating list size/length.

	      -    Turns out that the code is fine, just that in my tests I
	      was trying to remove an element which was no longer in the list,
	      I negleted the fact that I had previously sorted the list.
	      -    Added a hack to get around the fact that sorting double
	      precision integers is a bitch. Now the only issue is sorting
	      lists. The scheme I devised has failed me.
	      -    Finally managed to get the sort function to work, but as
	      usual something else broke.
	      -    Everything works fine/all tests pass. It turned out that
	      using xor to swap integers was a bad idea.

06/09/2017    -    Implemented prepend function but as I have come to expect,
it only half works prepend()'ing only one element and seg'faulting on the
next.
